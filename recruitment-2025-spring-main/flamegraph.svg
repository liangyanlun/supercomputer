<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>tlb_finish_mmu (3,030,303 samples, 0.04%)</title><rect x="93.6" y="165" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="96.65" y="175.5" ></text>
</g>
<g >
<title>test_on_one_layer (7,460,605,986 samples, 93.16%)</title><rect x="90.7" y="309" width="1099.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="93.67" y="319.5" >test_on_one_layer</text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (1,010,101 samples, 0.01%)</title><rect x="92.3" y="101" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="95.31" y="111.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (24,242,424 samples, 0.30%)</title><rect x="127.6" y="181" width="3.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="130.58" y="191.5" ></text>
</g>
<g >
<title>copy_creds (1,010,101 samples, 0.01%)</title><rect x="91.6" y="133" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="94.56" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (16,161,616 samples, 0.20%)</title><rect x="387.9" y="229" width="2.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="390.90" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,020,202 samples, 0.03%)</title><rect x="91.3" y="245" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="94.27" y="255.5" ></text>
</g>
<g >
<title>lru_cache_add (1,010,101 samples, 0.01%)</title><rect x="390.1" y="165" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="393.14" y="175.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (38,383,838 samples, 0.48%)</title><rect x="359.3" y="181" width="5.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="362.33" y="191.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,010,101 samples, 0.01%)</title><rect x="92.3" y="197" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="95.31" y="207.5" ></text>
</g>
<g >
<title>netlink_broadcast_filtered (1,010,101 samples, 0.01%)</title><rect x="92.2" y="101" width="0.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="95.16" y="111.5" ></text>
</g>
<g >
<title>do_user_addr_fault (51,515,151 samples, 0.64%)</title><rect x="1182.4" y="229" width="7.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1185.41" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,010,101 samples, 0.01%)</title><rect x="84.1" y="325" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="87.12" y="335.5" ></text>
</g>
<g >
<title>kernel_clone (5,050,505 samples, 0.06%)</title><rect x="91.6" y="165" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="94.56" y="175.5" ></text>
</g>
<g >
<title>clear_huge_page (35,353,535 samples, 0.44%)</title><rect x="359.8" y="165" width="5.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="362.77" y="175.5" ></text>
</g>
<g >
<title>clear_page_erms (8,080,808 samples, 0.10%)</title><rect x="388.9" y="133" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="391.95" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (28,282,828 samples, 0.35%)</title><rect x="127.0" y="229" width="4.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="129.99" y="239.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (12,121,212 samples, 0.15%)</title><rect x="90.7" y="277" width="1.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="93.67" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (31,313,131 samples, 0.39%)</title><rect x="86.1" y="277" width="4.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="89.06" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (24,242,424 samples, 0.30%)</title><rect x="127.6" y="197" width="3.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="130.58" y="207.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (547,474,742 samples, 6.84%)</title><rect x="10.0" y="341" width="80.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >[libgomp...</text>
</g>
<g >
<title>asm_exc_page_fault (51,515,151 samples, 0.64%)</title><rect x="1182.4" y="261" width="7.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1185.41" y="271.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (5,050,505 samples, 0.06%)</title><rect x="92.9" y="293" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="95.90" y="303.5" ></text>
</g>
<g >
<title>lock_page_lruvec_irqsave (1,010,101 samples, 0.01%)</title><rect x="92.8" y="149" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="95.75" y="159.5" ></text>
</g>
<g >
<title>prep_compound_page (1,010,101 samples, 0.01%)</title><rect x="255.9" y="133" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="258.88" y="143.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1,010,101 samples, 0.01%)</title><rect x="92.2" y="53" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="95.16" y="63.5" ></text>
</g>
<g >
<title>exc_page_fault (1,010,101 samples, 0.01%)</title><rect x="92.8" y="245" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="95.75" y="255.5" ></text>
</g>
<g >
<title>lru_cache_add (1,010,101 samples, 0.01%)</title><rect x="92.8" y="181" width="0.1" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="95.75" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,010,101 samples, 0.01%)</title><rect x="127.6" y="149" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="130.58" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,010,101 samples, 0.01%)</title><rect x="84.1" y="309" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="87.12" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (547,474,742 samples, 6.84%)</title><rect x="10.0" y="357" width="80.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >[libc.so.6]</text>
</g>
<g >
<title>__alloc_pages (3,030,303 samples, 0.04%)</title><rect x="388.1" y="181" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="391.05" y="191.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (1,010,101 samples, 0.01%)</title><rect x="359.0" y="149" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="362.03" y="159.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,030,303 samples, 0.04%)</title><rect x="359.3" y="149" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="362.33" y="159.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (28,282,828 samples, 0.35%)</title><rect x="127.0" y="261" width="4.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="129.99" y="271.5" ></text>
</g>
<g >
<title>clear_huge_page (23,232,323 samples, 0.29%)</title><rect x="127.7" y="165" width="3.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="130.73" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2,020,202 samples, 0.03%)</title><rect x="91.3" y="229" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="94.27" y="239.5" ></text>
</g>
<g >
<title>___slab_alloc.constprop.0 (2,020,202 samples, 0.03%)</title><rect x="91.9" y="53" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="94.86" y="63.5" ></text>
</g>
<g >
<title>test_on_one_layer (43,434,343 samples, 0.54%)</title><rect x="84.3" y="325" width="6.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="87.27" y="335.5" ></text>
</g>
<g >
<title>sock_def_readable (1,010,101 samples, 0.01%)</title><rect x="92.2" y="69" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="95.16" y="79.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,010,101 samples, 0.01%)</title><rect x="92.8" y="197" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="95.75" y="207.5" ></text>
</g>
<g >
<title>main (7,460,605,986 samples, 93.16%)</title><rect x="90.7" y="325" width="1099.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="93.67" y="335.5" >main</text>
</g>
<g >
<title>handle_mm_fault (24,242,424 samples, 0.30%)</title><rect x="127.6" y="213" width="3.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="130.58" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (45,454,545 samples, 0.57%)</title><rect x="358.4" y="245" width="6.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="361.43" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages (3,030,303 samples, 0.04%)</title><rect x="86.2" y="213" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="89.21" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,010,101 samples, 0.01%)</title><rect x="92.8" y="213" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="95.75" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages (4,040,404 samples, 0.05%)</title><rect x="1182.6" y="165" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1185.56" y="175.5" ></text>
</g>
<g >
<title>exc_page_fault (31,313,131 samples, 0.39%)</title><rect x="86.1" y="293" width="4.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="89.06" y="303.5" ></text>
</g>
<g >
<title>pthread_create (6,060,606 samples, 0.08%)</title><rect x="91.6" y="261" width="0.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="94.56" y="271.5" ></text>
</g>
<g >
<title>clear_subpage (46,464,646 samples, 0.58%)</title><rect x="1183.2" y="149" width="6.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1186.15" y="159.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,010,101 samples, 0.01%)</title><rect x="255.9" y="149" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="258.88" y="159.5" ></text>
</g>
<g >
<title>__do_sys_clone3 (5,050,505 samples, 0.06%)</title><rect x="91.6" y="181" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="94.56" y="191.5" ></text>
</g>
<g >
<title>exc_page_fault (28,282,828 samples, 0.35%)</title><rect x="127.0" y="245" width="4.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="129.99" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3,030,303 samples, 0.04%)</title><rect x="255.4" y="181" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="258.44" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,050,505 samples, 0.06%)</title><rect x="91.6" y="245" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="94.56" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2,020,202 samples, 0.03%)</title><rect x="91.9" y="69" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="94.86" y="79.5" ></text>
</g>
<g >
<title>clear_page_erms (27,272,727 samples, 0.34%)</title><rect x="86.7" y="181" width="4.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="89.65" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4,040,404 samples, 0.05%)</title><rect x="1182.6" y="149" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1185.56" y="159.5" ></text>
</g>
<g >
<title>sysvec_hyperv_stimer0 (1,010,101 samples, 0.01%)</title><rect x="84.0" y="309" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="86.97" y="319.5" ></text>
</g>
<g >
<title>perf_event_init_task (3,030,303 samples, 0.04%)</title><rect x="91.7" y="133" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="94.71" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (50,505,050 samples, 0.63%)</title><rect x="1182.6" y="197" width="7.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1185.56" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (28,282,828 samples, 0.35%)</title><rect x="255.0" y="229" width="4.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="257.99" y="239.5" ></text>
</g>
<g >
<title>__vm_munmap (3,030,303 samples, 0.04%)</title><rect x="93.6" y="213" width="0.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="96.65" y="223.5" ></text>
</g>
<g >
<title>clear_page_erms (1,010,101 samples, 0.01%)</title><rect x="92.3" y="85" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="95.31" y="95.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (28,282,828 samples, 0.35%)</title><rect x="255.0" y="261" width="4.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="257.99" y="271.5" ></text>
</g>
<g >
<title>clear_page_erms (44,444,444 samples, 0.55%)</title><rect x="1183.5" y="133" width="6.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1186.45" y="143.5" ></text>
</g>
<g >
<title>clear_page_erms (18,181,818 samples, 0.23%)</title><rect x="256.2" y="133" width="2.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="259.18" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (547,474,742 samples, 6.84%)</title><rect x="10.0" y="373" width="80.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >[libc.so.6]</text>
</g>
<g >
<title>do_user_addr_fault (45,454,545 samples, 0.57%)</title><rect x="358.4" y="229" width="6.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="361.43" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3,030,303 samples, 0.04%)</title><rect x="93.6" y="229" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="96.65" y="239.5" ></text>
</g>
<g >
<title>free_unref_page (2,020,202 samples, 0.03%)</title><rect x="93.8" y="133" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="96.80" y="143.5" ></text>
</g>
<g >
<title>_start (7,460,605,986 samples, 93.16%)</title><rect x="90.7" y="373" width="1099.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="93.67" y="383.5" >_start</text>
</g>
<g >
<title>get_tile_index (182,828,281 samples, 2.28%)</title><rect x="390.3" y="261" width="26.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="393.29" y="271.5" >g..</text>
</g>
<g >
<title>__handle_mm_fault (30,303,030 samples, 0.38%)</title><rect x="86.2" y="245" width="4.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="89.21" y="255.5" ></text>
</g>
<g >
<title>netlink_broadcast (1,010,101 samples, 0.01%)</title><rect x="92.2" y="117" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="95.16" y="127.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (16,161,616 samples, 0.20%)</title><rect x="387.9" y="261" width="2.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="390.90" y="271.5" ></text>
</g>
<g >
<title>__cond_resched (1,010,101 samples, 0.01%)</title><rect x="127.7" y="149" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="130.73" y="159.5" ></text>
</g>
<g >
<title>prep_compound_page (3,030,303 samples, 0.04%)</title><rect x="359.3" y="133" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="362.33" y="143.5" ></text>
</g>
<g >
<title>pgtable_trans_huge_deposit (1,010,101 samples, 0.01%)</title><rect x="258.9" y="165" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="261.86" y="175.5" ></text>
</g>
<g >
<title>__cond_resched (1,010,101 samples, 0.01%)</title><rect x="359.8" y="149" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="362.77" y="159.5" ></text>
</g>
<g >
<title>handle_mm_fault (15,151,515 samples, 0.19%)</title><rect x="388.1" y="213" width="2.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="391.05" y="223.5" ></text>
</g>
<g >
<title>clear_huge_page (27,272,727 samples, 0.34%)</title><rect x="86.7" y="213" width="4.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="89.65" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,020,202 samples, 0.03%)</title><rect x="91.3" y="261" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="94.27" y="271.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,010,101 samples, 0.01%)</title><rect x="84.0" y="293" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="86.97" y="303.5" ></text>
</g>
<g >
<title>__alloc_pages (1,010,101 samples, 0.01%)</title><rect x="255.9" y="165" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="258.88" y="175.5" ></text>
</g>
<g >
<title>handle_mm_fault (50,505,050 samples, 0.63%)</title><rect x="1182.6" y="213" width="7.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1185.56" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (51,515,151 samples, 0.64%)</title><rect x="1182.4" y="245" width="7.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1185.41" y="255.5" ></text>
</g>
<g >
<title>all (8,008,080,728 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>clear_huge_page (19,191,919 samples, 0.24%)</title><rect x="256.0" y="165" width="2.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="259.03" y="175.5" ></text>
</g>
<g >
<title>clear_page_erms (33,333,333 samples, 0.42%)</title><rect x="360.1" y="133" width="4.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="363.07" y="143.5" ></text>
</g>
<g >
<title>output_unpacking_store (353,535,350 samples, 4.41%)</title><rect x="365.1" y="277" width="52.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="368.13" y="287.5" >outpu..</text>
</g>
<g >
<title>get_signal (1,010,101 samples, 0.01%)</title><rect x="84.1" y="245" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="87.12" y="255.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (50,505,050 samples, 0.63%)</title><rect x="1182.6" y="181" width="7.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1185.56" y="191.5" ></text>
</g>
<g >
<title>inherit_event.constprop.0 (2,020,202 samples, 0.03%)</title><rect x="91.9" y="101" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="94.86" y="111.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1,010,101 samples, 0.01%)</title><rect x="84.0" y="261" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="86.97" y="271.5" ></text>
</g>
<g >
<title>clear_subpage (10,101,010 samples, 0.13%)</title><rect x="388.6" y="149" width="1.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="391.65" y="159.5" ></text>
</g>
<g >
<title>copy_process (5,050,505 samples, 0.06%)</title><rect x="91.6" y="149" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="94.56" y="159.5" ></text>
</g>
<g >
<title>output_transform (719,191,912 samples, 8.98%)</title><rect x="259.2" y="277" width="105.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="262.16" y="287.5" >output_trans..</text>
</g>
<g >
<title>__alloc_pages (1,010,101 samples, 0.01%)</title><rect x="127.6" y="165" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="130.58" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,030,303 samples, 0.04%)</title><rect x="93.6" y="261" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="96.65" y="271.5" ></text>
</g>
<g >
<title>prep_compound_page (4,040,404 samples, 0.05%)</title><rect x="1182.6" y="133" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1185.56" y="143.5" ></text>
</g>
<g >
<title>alloc_perf_context (1,010,101 samples, 0.01%)</title><rect x="91.7" y="101" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="94.71" y="111.5" ></text>
</g>
<g >
<title>do_futex (2,020,202 samples, 0.03%)</title><rect x="91.3" y="213" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="94.27" y="223.5" ></text>
</g>
<g >
<title>prep_compound_page (2,020,202 samples, 0.03%)</title><rect x="86.4" y="181" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="89.35" y="191.5" ></text>
</g>
<g >
<title>clear_page_erms (3,030,303 samples, 0.04%)</title><rect x="388.1" y="133" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="391.05" y="143.5" ></text>
</g>
<g >
<title>__alloc_pages (3,030,303 samples, 0.04%)</title><rect x="255.0" y="181" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="257.99" y="191.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1,010,101 samples, 0.01%)</title><rect x="259.0" y="197" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="262.01" y="207.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1,010,101 samples, 0.01%)</title><rect x="92.8" y="165" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="95.75" y="175.5" ></text>
</g>
<g >
<title>rcu_all_qs (1,010,101 samples, 0.01%)</title><rect x="127.7" y="133" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="130.73" y="143.5" ></text>
</g>
<g >
<title>__pte_alloc (1,010,101 samples, 0.01%)</title><rect x="92.3" y="165" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="95.31" y="175.5" ></text>
</g>
<g >
<title>exc_page_fault (1,010,101 samples, 0.01%)</title><rect x="92.3" y="229" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="95.31" y="239.5" ></text>
</g>
<g >
<title>image_transform (569,696,964 samples, 7.11%)</title><rect x="175.2" y="277" width="84.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="178.21" y="287.5" >image_tra..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,010,101 samples, 0.01%)</title><rect x="84.1" y="293" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="87.12" y="303.5" ></text>
</g>
<g >
<title>proc_fork_connector (1,010,101 samples, 0.01%)</title><rect x="92.2" y="133" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="95.16" y="143.5" ></text>
</g>
<g >
<title>free_pcp_prepare (2,020,202 samples, 0.03%)</title><rect x="93.8" y="117" width="0.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="96.80" y="127.5" ></text>
</g>
<g >
<title>get_tile_index (298,989,896 samples, 3.73%)</title><rect x="131.2" y="261" width="44.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="134.16" y="271.5" >get_..</text>
</g>
<g >
<title>perf_event_alloc (2,020,202 samples, 0.03%)</title><rect x="91.9" y="85" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="94.86" y="95.5" ></text>
</g>
<g >
<title>clear_subpage (19,191,919 samples, 0.24%)</title><rect x="256.0" y="149" width="2.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="259.03" y="159.5" ></text>
</g>
<g >
<title>__handle_mm_fault (15,151,515 samples, 0.19%)</title><rect x="388.1" y="197" width="2.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="391.05" y="207.5" ></text>
</g>
<g >
<title>handle_softirqs (1,010,101 samples, 0.01%)</title><rect x="84.0" y="277" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="86.97" y="287.5" ></text>
</g>
<g >
<title>clear_huge_page (11,111,111 samples, 0.14%)</title><rect x="388.5" y="165" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="391.50" y="175.5" ></text>
</g>
<g >
<title>prep_compound_page (1,010,101 samples, 0.01%)</title><rect x="127.6" y="133" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="130.58" y="143.5" ></text>
</g>
<g >
<title>handle_mm_fault (28,282,828 samples, 0.35%)</title><rect x="255.0" y="213" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="257.99" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (27,272,727 samples, 0.34%)</title><rect x="255.0" y="197" width="4.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="257.99" y="207.5" ></text>
</g>
<g >
<title>inherit_task_group.isra.0 (3,030,303 samples, 0.04%)</title><rect x="91.7" y="117" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="94.71" y="127.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,030,303 samples, 0.04%)</title><rect x="86.2" y="197" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="89.21" y="207.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (30,303,030 samples, 0.38%)</title><rect x="86.2" y="229" width="4.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="89.21" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_stimer0 (1,010,101 samples, 0.01%)</title><rect x="84.0" y="325" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="86.97" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,050,505 samples, 0.06%)</title><rect x="91.6" y="229" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="94.56" y="239.5" ></text>
</g>
<g >
<title>filter_packing (1,010,101 samples, 0.01%)</title><rect x="94.1" y="277" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="97.09" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (42,424,242 samples, 0.53%)</title><rect x="358.7" y="197" width="6.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="361.73" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,010,101 samples, 0.01%)</title><rect x="92.8" y="261" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="95.75" y="271.5" ></text>
</g>
<g >
<title>clear_huge_page (46,464,646 samples, 0.58%)</title><rect x="1183.2" y="165" width="6.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1186.15" y="175.5" ></text>
</g>
<g >
<title>clear_page_erms (2,020,202 samples, 0.03%)</title><rect x="255.1" y="133" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="258.14" y="143.5" ></text>
</g>
<g >
<title>__netlink_sendskb (1,010,101 samples, 0.01%)</title><rect x="92.2" y="85" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="95.16" y="95.5" ></text>
</g>
<g >
<title>__munmap (3,030,303 samples, 0.04%)</title><rect x="93.6" y="277" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="96.65" y="287.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (3,030,303 samples, 0.04%)</title><rect x="388.1" y="149" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="391.05" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,460,605,986 samples, 93.16%)</title><rect x="90.7" y="341" width="1099.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="93.67" y="351.5" >[libc.so.6]</text>
</g>
<g >
<title>clear_subpage (34,343,434 samples, 0.43%)</title><rect x="359.9" y="149" width="5.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="362.92" y="159.5" ></text>
</g>
<g >
<title>test_on_one_layer (3,030,303 samples, 0.04%)</title><rect x="92.5" y="277" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="95.46" y="287.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,010,101 samples, 0.01%)</title><rect x="92.3" y="245" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="95.31" y="255.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (1,010,101 samples, 0.01%)</title><rect x="84.1" y="261" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="87.12" y="271.5" ></text>
</g>
<g >
<title>unmap_region (3,030,303 samples, 0.04%)</title><rect x="93.6" y="181" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="96.65" y="191.5" ></text>
</g>
<g >
<title>get_tile_index (25,252,525 samples, 0.32%)</title><rect x="94.4" y="277" width="3.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="97.39" y="287.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (5,050,505 samples, 0.06%)</title><rect x="92.9" y="277" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="95.90" y="287.5" ></text>
</g>
<g >
<title>image_packing (523,232,318 samples, 6.53%)</title><rect x="98.1" y="277" width="77.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="101.11" y="287.5" >image_pa..</text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (2,020,202 samples, 0.03%)</title><rect x="255.1" y="149" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="258.14" y="159.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1,010,101 samples, 0.01%)</title><rect x="365.0" y="197" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="367.98" y="207.5" ></text>
</g>
<g >
<title>wake_up_q (2,020,202 samples, 0.03%)</title><rect x="91.3" y="181" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="94.27" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages (3,030,303 samples, 0.04%)</title><rect x="359.3" y="165" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="362.33" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,050,505 samples, 0.06%)</title><rect x="91.6" y="197" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="94.56" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (16,161,616 samples, 0.20%)</title><rect x="387.9" y="245" width="2.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="390.90" y="255.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (12,121,212 samples, 0.15%)</title><rect x="388.5" y="181" width="1.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="391.50" y="191.5" ></text>
</g>
<g >
<title>clear_page_erms (19,191,919 samples, 0.24%)</title><rect x="128.3" y="133" width="2.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="131.33" y="143.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (21,212,121 samples, 0.26%)</title><rect x="255.9" y="181" width="3.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="258.88" y="191.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1,010,101 samples, 0.01%)</title><rect x="359.2" y="181" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="362.18" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,010,101 samples, 0.01%)</title><rect x="92.3" y="213" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="95.31" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (31,313,131 samples, 0.39%)</title><rect x="86.1" y="309" width="4.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="89.06" y="319.5" ></text>
</g>
<g >
<title>__do_munmap (3,030,303 samples, 0.04%)</title><rect x="93.6" y="197" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="96.65" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,010,101 samples, 0.01%)</title><rect x="92.3" y="181" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="95.31" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (1,010,101 samples, 0.01%)</title><rect x="91.7" y="85" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="94.71" y="95.5" ></text>
</g>
<g >
<title>__libc_start_main (7,460,605,986 samples, 93.16%)</title><rect x="90.7" y="357" width="1099.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="93.67" y="367.5" >__libc_start_main</text>
</g>
<g >
<title>handle_mm_fault (30,303,030 samples, 0.38%)</title><rect x="86.2" y="261" width="4.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="89.21" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages (1,010,101 samples, 0.01%)</title><rect x="359.0" y="181" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="362.03" y="191.5" ></text>
</g>
<g >
<title>allocate_slab (1,010,101 samples, 0.01%)</title><rect x="92.0" y="37" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="95.01" y="47.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,030,303 samples, 0.04%)</title><rect x="388.1" y="165" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="391.05" y="175.5" ></text>
</g>
<g >
<title>GOMP_parallel (15,151,515 samples, 0.19%)</title><rect x="90.7" y="293" width="2.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="93.67" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,010,101 samples, 0.01%)</title><rect x="92.3" y="117" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="95.31" y="127.5" ></text>
</g>
<g >
<title>pte_alloc_one (1,010,101 samples, 0.01%)</title><rect x="92.3" y="149" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="95.31" y="159.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,010,101 samples, 0.01%)</title><rect x="84.1" y="277" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="87.12" y="287.5" ></text>
</g>
<g >
<title>clear_subpage (27,272,727 samples, 0.34%)</title><rect x="86.7" y="197" width="4.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="89.65" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,050,505 samples, 0.06%)</title><rect x="91.6" y="213" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="94.56" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (45,454,545 samples, 0.57%)</title><rect x="358.4" y="261" width="6.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="361.43" y="271.5" ></text>
</g>
<g >
<title>sgemm (5,244,444,392 samples, 65.49%)</title><rect x="417.2" y="277" width="772.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="420.23" y="287.5" >sgemm</text>
</g>
<g >
<title>handle_mm_fault (43,434,343 samples, 0.54%)</title><rect x="358.7" y="213" width="6.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="361.73" y="223.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,010,101 samples, 0.01%)</title><rect x="92.8" y="229" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="95.75" y="239.5" ></text>
</g>
<g >
<title>clear_subpage (22,222,222 samples, 0.28%)</title><rect x="127.9" y="149" width="3.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="130.88" y="159.5" ></text>
</g>
<g >
<title>try_to_wake_up (2,020,202 samples, 0.03%)</title><rect x="91.3" y="165" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="94.27" y="175.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1,010,101 samples, 0.01%)</title><rect x="390.1" y="149" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="393.14" y="159.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (70,707,070 samples, 0.88%)</title><rect x="73.6" y="325" width="10.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="76.55" y="335.5" ></text>
</g>
<g >
<title>release_pages (3,030,303 samples, 0.04%)</title><rect x="93.6" y="149" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="96.65" y="159.5" ></text>
</g>
<g >
<title>__alloc_pages (1,010,101 samples, 0.01%)</title><rect x="92.3" y="133" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="95.31" y="143.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,010,101 samples, 0.01%)</title><rect x="359.0" y="165" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="362.03" y="175.5" ></text>
</g>
<g >
<title>update_blocked_averages (1,010,101 samples, 0.01%)</title><rect x="84.0" y="245" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="86.97" y="255.5" ></text>
</g>
<g >
<title>filter_transform (1,010,101 samples, 0.01%)</title><rect x="94.2" y="277" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="97.24" y="287.5" ></text>
</g>
<g >
<title>futex_wake (2,020,202 samples, 0.03%)</title><rect x="91.3" y="197" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="94.27" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (28,282,828 samples, 0.35%)</title><rect x="255.0" y="245" width="4.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="257.99" y="255.5" ></text>
</g>
<g >
<title>charge_memcg (1,010,101 samples, 0.01%)</title><rect x="359.2" y="165" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="362.18" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,030,303 samples, 0.04%)</title><rect x="93.6" y="245" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="96.65" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,030,303 samples, 0.04%)</title><rect x="255.0" y="165" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="257.99" y="175.5" ></text>
</g>
<g >
<title>winograd_convolution (7,440,403,966 samples, 92.91%)</title><rect x="93.6" y="293" width="1096.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="96.65" y="303.5" >winograd_convolution</text>
</g>
<g >
<title>clear_page_erms (1,010,101 samples, 0.01%)</title><rect x="359.0" y="133" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="362.03" y="143.5" ></text>
</g>
<g >
<title>winograd (8,008,080,728 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >winograd</text>
</g>
</g>
</svg>
